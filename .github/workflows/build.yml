name: Build and Deploy to Tomcat

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload WAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-war
          path: target/*.war

  deploy:
    runs-on: [self-hosted, windows]
    needs: build
    steps:
      - name: Download WAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: java-war
          path: ./war
      
      - name: Stop Tomcat
        run: |
          powershell -Command "
            & 'D:\Tomcat10\bin\shutdown.bat';
            Start-Sleep -Seconds 10;
            Get-Process java -ErrorAction SilentlyContinue | Where-Object { $_.Path -like '*Tomcat*' } | Stop-Process -Force -ErrorAction SilentlyContinue
          "
        shell: powershell

      - name: Remove old WAR and exploded folder
        run: |
          if exist D:\Tomcat10\webapps\java-servlet-web-1.0-SNAPSHOT.war del D:\Tomcat10\webapps\java-servlet-web-1.0-SNAPSHOT.war
          if exist D:\Tomcat10\webapps\java-servlet-web-1.0-SNAPSHOT rmdir /s /q D:\Tomcat10\webapps\java-servlet-web-1.0-SNAPSHOT
        shell: cmd

      - name: Deploy WAR to Tomcat
        run: |
          copy .\war\java-servlet-web-1.0-SNAPSHOT.war D:\Tomcat10\webapps\
        shell: cmd

      - name: Start Tomcat
        run: |
          powershell D:\Tomcat10\bin\startup.bat
        shell: cmd

      - name: Verify Deployment
        run: |
          powershell -Command "Start-Sleep -Seconds 30; try { $res = Invoke-WebRequest -Uri 'http://localhost:8089/java-servlet-web-1.0-SNAPSHOT/hello9' -UseBasicParsing; if ($res.StatusCode -eq 200) { Write-Host 'Deployment successful' } else { Write-Error 'Deployment failed' } } catch { Write-Error 'Cannot connect to server' }"
